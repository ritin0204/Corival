# Generated by Django 4.1 on 2023-04-01 09:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('corival', '0004_practice_practicesubmission'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(default='No Note')),
                ('difficulty', models.IntegerField(default=1)),
                ('category', models.CharField(choices=[['All', 'All'], ['Profit and Loss', 'Profit and Loss'], ['Time and Work', 'Time and Work'], ['Time and Distance', 'Time and Distance'], ['Number System', 'Number System'], ['Average', 'Average'], ['Percentage', 'Percentage'], ['Ratio and Proportion', 'Ratio and Proportion'], ['Mensuration', 'Mensuration'], ['Simple Interest', 'Simple Interest'], ['Compound Interest', 'Compound Interest'], ['Algebra', 'Algebra'], ['Geometry', 'Geometry'], ['Trigonometry', 'Trigonometry'], ['Data Interpretation', 'Data Interpretation'], ['Miscellaneous', 'Miscellaneous']], default='All', max_length=100)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(default=datetime.datetime(2023, 4, 2, 15, 7, 24, 999237))),
                ('questions', models.ManyToManyField(to='corival.apptitude')),
                ('reciever', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges_recieved', to='corival.candidate')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges_sent', to='corival.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[['All', 'All'], ['Profit and Loss', 'Profit and Loss'], ['Time and Work', 'Time and Work'], ['Time and Distance', 'Time and Distance'], ['Number System', 'Number System'], ['Average', 'Average'], ['Percentage', 'Percentage'], ['Ratio and Proportion', 'Ratio and Proportion'], ['Mensuration', 'Mensuration'], ['Simple Interest', 'Simple Interest'], ['Compound Interest', 'Compound Interest'], ['Algebra', 'Algebra'], ['Geometry', 'Geometry'], ['Trigonometry', 'Trigonometry'], ['Data Interpretation', 'Data Interpretation'], ['Miscellaneous', 'Miscellaneous']], default='All', max_length=100)),
                ('difficulty', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(to='corival.apptitude')),
            ],
        ),
        migrations.CreateModel(
            name='ContestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timm_took', models.TimeField()),
                ('answer', models.BooleanField(default=False)),
                ('apptitude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='corival.apptitude')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='corival.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContestLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard', to='corival.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timm_took', models.TimeField()),
                ('answer', models.BooleanField(default=False)),
                ('apptitude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_submissions', to='corival.apptitude')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='corival.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard', to='corival.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_leaderboard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
    ]
