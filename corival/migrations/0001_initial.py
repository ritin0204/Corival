# Generated by Django 4.1 on 2022-11-21 06:52

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_manager', models.BooleanField(default=False)),
                ('rating', models.IntegerField(default=1500, null=True)),
                ('bio', models.TextField(default='Hello there! Just started Competiting.', null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='corival/files/profile', verbose_name='profile_pic')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('start_time', models.DateTimeField(default=datetime.datetime(2022, 11, 21, 12, 22, 3, 79946))),
                ('end_time', models.DateTimeField(default=datetime.datetime(2022, 11, 22, 12, 22, 3, 79994))),
                ('duration', models.DurationField()),
                ('archive', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('no_of_questions', models.IntegerField(default=20)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participients', models.ManyToManyField(blank=True, related_name='participients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.TextField(unique=True)),
                ('options1', models.CharField(max_length=150, null=True)),
                ('options2', models.CharField(max_length=150, null=True)),
                ('options3', models.CharField(max_length=150, null=True)),
                ('options4', models.CharField(max_length=150, null=True)),
                ('right_answer', models.CharField(max_length=150)),
                ('category', models.CharField(choices=[('PR', 'Percentage'), ('P&L', 'Profit and loss'), ('DC', 'Discount'), ('SI', 'Simple Interest')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100, null=True)),
                ('duration', models.DurationField()),
                ('no_of_questions', models.IntegerField(default=20)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('questions', models.ManyToManyField(related_name='practicequestions', to='corival.questions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('message_url', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('alerType', models.CharField(choices=[('CH', 'Challenge'), ('COMP', 'Competition'), ('USR', 'User'), ('PRC', 'Practice')], default=None, max_length=100, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField(null=True)),
                ('compId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corival.competition')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='questions',
            field=models.ManyToManyField(blank=True, related_name='questions', to='corival.questions'),
        ),
        migrations.CreateModel(
            name='Challenges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('start_time', models.DateTimeField(default=datetime.datetime(2022, 11, 21, 12, 22, 3, 89303))),
                ('end_time', models.DateTimeField(default=datetime.datetime(2022, 11, 22, 12, 22, 3, 89342))),
                ('duration', models.DurationField()),
                ('user_score', models.IntegerField(blank=True, null=True)),
                ('opponent_score', models.IntegerField(blank=True, null=True)),
                ('no_of_questions', models.IntegerField(default=20)),
                ('finished', models.BooleanField(default=False)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenger', to=settings.AUTH_USER_MODEL)),
                ('opponent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chllengee', to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(blank=True, related_name='challenge_questions', to='corival.questions')),
            ],
        ),
    ]
